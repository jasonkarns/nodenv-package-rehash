#!/usr/bin/env bash

set -e
[ -n "$NODENV_DEBUG" ] && set -x

PLUGIN_ROOT="${BASH_SOURCE%/*}/.."
HOOKS_DIR="lib/node_modules/.hooks"
POSTINSTALL_HOOK="$HOOKS_DIR/postinstall"
POSTUNINSTALL_HOOK="$HOOKS_DIR/postuninstall"



versions() {
  case "$1" in
    "")    nodenv-version-name    ;; # list active version
    --all) nodenv-versions --bare ;; # list all installed versions
    *)     echo "$@"              ;; # list specififed versions
  esac
}

list_hooks_for() {
  for v in "$@"; do
    local version_hooks_dir="$(nodenv-prefix "$v")/$HOOKS_DIR"

    echo $v
    if [ -d "$version_hooks_dir" ]; then
      ls "$version_hooks_dir"
    else
      echo "no hooks installed"
    fi
  done
}


install_hooks_for() {
  for v in "$@"; do
    local version_prefix="$(nodenv-prefix "$v")"

    mkdir -p "$version_prefix/$HOOKS_DIR"

    # install the postinstall/postuninstall hook scripts by symlinking them
    REHASH="$PLUGIN_ROOT/libexec/nodenv-rehash.sh"

    ln -nsf "$REHASH" "$version_prefix/$POSTINSTALL_HOOK"
    ln -nsf "$REHASH" "$version_prefix/$POSTUNINSTALL_HOOK"
  done
}


uninstall_hooks_for() {
  for v in "$@"; do
    local version_prefix="$(nodenv-prefix "$v")"

    # remove postinstall/postuninstall hook scripts
    rm "$version_prefix/$POSTINSTALL_HOOK"
    rm "$version_prefix/$POSTUNINSTALL_HOOK"
  done
}

cmd="$1"
shift

case "$cmd" in

  list)

    list_hooks_for $(versions "$@") ;;

  install)

    install_hooks_for $(versions "$@") ;;

  uninstall)

    uninstall_hooks_for $(versions "$@") ;;

  *)

    ;;

esac
