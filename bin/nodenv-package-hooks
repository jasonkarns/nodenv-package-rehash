#!/usr/bin/env bash

set -e
[ -n "$NODENV_DEBUG" ] && set -x

PLUGIN_ROOT="${BASH_SOURCE%/*}/.."
HOOKS_DIR="lib/node_modules/.hooks"
POSTINSTALL_HOOK="$HOOKS_DIR/postinstall"
POSTUNINSTALL_HOOK="$HOOKS_DIR/postuninstall"



versions() {
  case "$1" in
    "")    nodenv-version-name    ;; # list active version
    --all) nodenv-versions --bare ;; # list all installed versions
    *)     echo "$@"              ;; # list specififed versions
  esac
}

list_hooks_for(){
  version_prefix="$1"
  version="$2"

  echo $version
  if [ -d "$version_prefix/$HOOKS_DIR" ]; then
    ls "$version_prefix/$HOOKS_DIR"
  else
    echo "no hooks installed"
  fi
}

list_hooks() {
  for v in "$@"; do
    local version_prefix="$(nodenv-prefix "$v")"
    list_hooks_for $version_prefix $v
  done
}

install_hooks_for() {
  version_prefix="$1"

  mkdir -p "$version_prefix/$HOOKS_DIR"

  # install the postinstall/postuninstall hook scripts by symlinking them
  REHASH="$PLUGIN_ROOT/libexec/nodenv-rehash.sh"

  ln -nsf "$REHASH" "$version_prefix/$POSTINSTALL_HOOK"
  ln -nsf "$REHASH" "$version_prefix/$POSTUNINSTALL_HOOK"
}

install_hooks() {
  for v in "$@"; do
    local version_prefix="$(nodenv-prefix "$v")"
    install_hooks_for $version_prefix
  done
}

uninstall_hooks_for() {
  version_prefix="$1"

  # remove postinstall/postuninstall hook scripts
  rm "$version_prefix/$POSTINSTALL_HOOK"
  rm "$version_prefix/$POSTUNINSTALL_HOOK"
}

uninstall_hooks() {
  for v in "$@"; do
    local version_prefix="$(nodenv-prefix "$v")"
    uninstall_hooks_for $version_prefix
  done
}

cmd="$1"
shift

case "$cmd" in

  list)

    list_hooks $(versions "$@") ;;

  install)

    install_hooks $(versions "$@") ;;

  uninstall)

    uninstall_hooks $(versions "$@") ;;

  *)

    ;;

esac
